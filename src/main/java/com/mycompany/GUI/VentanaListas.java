/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.GUI;

import com.mycompany.excepciones.MyException;
import com.mycompany.gestor.GestorActores;
import com.mycompany.gestor.GestorDirectores;
import com.mycompany.gestor.GestorPeliculas;
import com.mycompany.modelo.Actor;
import com.mycompany.modelo.Director;
import com.mycompany.modelo.Pelicula;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jorge
 */
public class VentanaListas extends javax.swing.JFrame {

    private DefaultTableModel modeloTabla;
    VentanaPrincipal vP = new VentanaPrincipal();
    GestorActores gestorActores;

    /**
     * Creates new form VentanaListas
     */
    public VentanaListas(VentanaPrincipal vP) {
        this.vP = vP;
        initComponents();
        this.setVisible(true);
    }

    private void salir() {
        // TODO add your handling code here:
        vP.setVisible(true);
        this.dispose();
    }

    private void cargarActoresEnTabla() {
        try {
            gestorActores = new GestorActores();
            List<Actor> listaActores = gestorActores.getActores();

            // Crear modelo con las columnas correctas para actores
            String[] columnas = {"ID", "Nombre", "Edad"};
            modeloTabla = new DefaultTableModel(columnas, 0);

            // Añadir filas
            for (Actor actor : listaActores) {
                Object[] fila = {actor.getIdActor(), actor.getNombre(), actor.getEdad()};
                modeloTabla.addRow(fila);
            }

            jTable1.setModel(modeloTabla);
            jTable1.setAutoCreateRowSorter(true); // Ordenar por columnas
        } catch (MyException ex) {
            JOptionPane.showMessageDialog(this, "Error cargando los actores");
        }
    }

    private void cargarPeliculasEnTabla() {
        try {
            GestorPeliculas gestorPeliculas = new GestorPeliculas();
            List<Pelicula> listaPeliculas = gestorPeliculas.getPeliculas();

            String[] columnas = {"ID", "Título", "Género", "Director", "Actores"};
            modeloTabla = new DefaultTableModel(columnas, 0);

            for (Pelicula p : listaPeliculas) {
                // Convertir lista de actores en String
                String nombresActores = "";
                if (p.getActores() != null) {
                    for (Actor a : p.getActores()) {
                        if (!nombresActores.isEmpty()) {
                            nombresActores += ", ";
                        }
                        nombresActores += a.getNombre();
                    }
                }

                String nombreDirector = "Sin director";
                if (p.getDirector() != null) {
                    nombreDirector = p.getDirector().getNombre();
                }

                Object[] fila = {p.getIdPeli(), p.getTitulo(), p.getGenero(), nombreDirector, nombresActores};
                modeloTabla.addRow(fila);
            }

            jTable1.setModel(modeloTabla);
            jTable1.setAutoCreateRowSorter(true);
        } catch (MyException ex) {
            JOptionPane.showMessageDialog(this, "Error cargando las películas");
        }
    }

    private void cargarDirectoresEnTabla() {
        try {
            GestorDirectores gestorDirectores = new GestorDirectores();
            List<Director> listaDirectores = gestorDirectores.getDirectores();

            String[] columnas = {"ID", "Nombre", "Apellido"};
            modeloTabla = new DefaultTableModel(columnas, 0);

            for (Director d : listaDirectores) {
                Object[] fila = {d.getIdDirector(), d.getNombre(), d.getApellido()};
                modeloTabla.addRow(fila);
            }

            jTable1.setModel(modeloTabla);
            jTable1.setAutoCreateRowSorter(true);
        } catch (MyException ex) {
            JOptionPane.showMessageDialog(this, "Error cargando los directores");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnTablaActor = new javax.swing.JButton();
        btnTablaDrectores = new javax.swing.JButton();
        btnTablaPelis = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnTablaActor.setText("Mostrar actores");
        btnTablaActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTablaActorActionPerformed(evt);
            }
        });

        btnTablaDrectores.setText("Mostrar directores");
        btnTablaDrectores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTablaDrectoresActionPerformed(evt);
            }
        });

        btnTablaPelis.setText("Mostrar peliculas");
        btnTablaPelis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTablaPelisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(btnTablaActor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(btnTablaDrectores)
                .addGap(27, 27, 27)
                .addComponent(btnTablaPelis)
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTablaActor)
                    .addComponent(btnTablaDrectores)
                    .addComponent(btnTablaPelis))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        salir();
    }//GEN-LAST:event_formWindowClosing

    private void btnTablaActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTablaActorActionPerformed
        // TODO add your handling code here:
        cargarActoresEnTabla();
    }//GEN-LAST:event_btnTablaActorActionPerformed

    private void btnTablaDrectoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTablaDrectoresActionPerformed
        // TODO add your handling code here:
        cargarDirectoresEnTabla();
    }//GEN-LAST:event_btnTablaDrectoresActionPerformed

    private void btnTablaPelisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTablaPelisActionPerformed
        // TODO add your handling code here:
        cargarPeliculasEnTabla();
    }//GEN-LAST:event_btnTablaPelisActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTablaActor;
    private javax.swing.JButton btnTablaDrectores;
    private javax.swing.JButton btnTablaPelis;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
