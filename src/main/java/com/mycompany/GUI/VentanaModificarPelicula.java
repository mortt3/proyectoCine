/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.GUI;

import com.mycompany.excepciones.MyException;
import com.mycompany.gestor.GestorDirectores;
import com.mycompany.gestor.GestorPeliculas;
import com.mycompany.modelo.Actor;
import com.mycompany.modelo.Director;
import com.mycompany.modelo.Pelicula;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alumno
 */
public class VentanaModificarPelicula extends javax.swing.JFrame {

    private Pelicula peliculaEncontrada;
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(VentanaModificarPelicula.class.getName());
    private VentanaPrincipal vP;
    private List<Actor> actoresSelccionados = new ArrayList<>();
    private List<Director> directoresDisponibles = new ArrayList<>();
    private DefaultTableModel modeloTabla;

    /**
     * Creates new form VentanaModificarPelicula
     */
    public VentanaModificarPelicula(VentanaPrincipal vP) {
        this.vP = vP;
        initComponents();
        cargarPeliculasEnTabla();
        cargarDirectores();
        this.setVisible(true);
        HabilitarBuscar();
    }

    private void HabilitarBuscar() {
        btnBuscar.setText("buscar");
        txtIdPelicula.setEnabled(true);
        txtIdPelicula.setText("");
        txtTitulo.setEnabled(false);
        txtTitulo.setText("");
        comboDirector.setEnabled(false);
        comboGenero.setEnabled(false);
        listaActortes.setText("");
        btnSelecionarActor.setVisible(false);
    }

    private void HabilitarModificar(Pelicula peliculaEncontrada) {
        btnBuscar.setText("modificar");
        txtIdPelicula.setEnabled(false);
        txtIdPelicula.setText(peliculaEncontrada.getIdPeli());
        txtTitulo.setEnabled(true);
        txtTitulo.setText(peliculaEncontrada.getTitulo());
        comboDirector.setEnabled(true);
        comboDirector.setSelectedItem(peliculaEncontrada.getDirector());
        comboGenero.setEnabled(true);
        comboGenero.setSelectedItem(peliculaEncontrada.getGenero());
        btnSelecionarActor.setVisible(true);
        setActoresSeleccionados(peliculaEncontrada.getActores());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtIdPelicula = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        comboGenero = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        comboDirector = new javax.swing.JComboBox<>();
        btnSelecionarActor = new javax.swing.JButton();
        listaActortes = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Id Pelicula que desas modificar");

        txtIdPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdPeliculaActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel3.setText("modificar genero:");

        comboGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Acci√≥n", "Comedia", "Drama", "Terror", "ciencia Ficcion" }));

        jLabel4.setText("Modificar director");

        comboDirector.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        comboDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDirectorActionPerformed(evt);
            }
        });

        btnSelecionarActor.setText("Seleccionar actores");
        btnSelecionarActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarActorActionPerformed(evt);
            }
        });

        jLabel5.setText("Cambiar actores:");

        jLabel6.setText("modificar titulo:");

        txtTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTituloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(listaActortes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnBuscar)
                                    .addComponent(jLabel1))
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(comboDirector, 0, 108, Short.MAX_VALUE)
                                .addComponent(comboGenero, 0, 1, Short.MAX_VALUE)
                                .addComponent(txtIdPelicula)
                                .addComponent(btnSelecionarActor, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addComponent(txtTitulo))))
                    .addComponent(jLabel6))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIdPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(btnSelecionarActor))
                .addGap(18, 18, 18)
                .addComponent(listaActortes, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscar)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:   
        salir();
    }//GEN-LAST:event_formWindowClosing

    private void txtIdPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdPeliculaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdPeliculaActionPerformed

    private void comboDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDirectorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboDirectorActionPerformed
    private void cargarDirectores() {
        try {
            GestorDirectores gestor = new GestorDirectores();
            directoresDisponibles = gestor.getDirectores();
            comboDirector.removeAllItems();
            for (Director d : directoresDisponibles) {
                comboDirector.addItem(d);
            }
        } catch (MyException ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar los directores.");
        }
    }
    private void btnSelecionarActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarActorActionPerformed
        // TODO add your handling code here:
        VentanaSeleccionActores vSA = new VentanaSeleccionActores(null, this, "VentanaModificar");
        this.setVisible(false);
    }//GEN-LAST:event_btnSelecionarActorActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try {
            // TODO add your handling code here:
            peliculaEncontrada = null;
            GestorPeliculas gestor = new GestorPeliculas();
            if (btnBuscar.getText().trim().equalsIgnoreCase("buscar".trim())) { // el boton se llama buscar
                if (txtIdPelicula.getText() == null || txtIdPelicula.getText().trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "No se introdujo ning√∫n nombre.");
                } else {

                    List<Pelicula> peliculas = gestor.getPeliculas();
                    boolean encontrado = false;
                    for (Pelicula p : peliculas) {
                        if (p.getIdPeli().equalsIgnoreCase(txtIdPelicula.getText().trim())) {
                            encontrado = true;
                            peliculaEncontrada = p;
                            break; //eencontro la pei, salimos del bucle
                        }
                    }
                    if (!encontrado) {
                        JOptionPane.showMessageDialog(this, "No se encontr√≥ ninguna peli con ese nombre");
                    } else if (encontrado) {
                        HabilitarModificar(peliculaEncontrada);
                    }
                }
            } else {
                try {
                    // el boton no se llama buscar si no modificaar
                    Director directorSeleccionado = (Director) comboDirector.getSelectedItem();
                    String generoSeleccionado = (String) comboGenero.getSelectedItem().toString();

                    Pelicula peliModificada = new Pelicula(
                            txtIdPelicula.getText().trim(),
                            txtTitulo.getText().trim(),
                            generoSeleccionado,
                            directorSeleccionado,
                            actoresSelccionados
                    );
                    gestor.modificarPelicula(peliModificada, directoresDisponibles, actoresSelccionados);
                    JOptionPane.showMessageDialog(this, "Pel√≠cula modificada correctamente.");
                    HabilitarBuscar();
                } catch (MyException ex) {
                    JOptionPane.showMessageDialog(this, "Error al buscar: " + ex.getMessage());
                }
            }
        } catch (MyException ex) {
            Logger.getLogger(VentanaModificarPelicula.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTituloActionPerformed

    private void salir() {
        vP.setVisible(true);
        this.dispose();
    }

    private void cargarPeliculasEnTabla() {
        try {
            GestorPeliculas gestorPeliculas = new GestorPeliculas();
            List<Pelicula> listaPeliculas = gestorPeliculas.getPeliculas();

            String[] columnas = {"ID", "T√≠tulo", "G√©nero", "Director", "Actores"};
            modeloTabla = new DefaultTableModel(columnas, 0);

            for (Pelicula p : listaPeliculas) {
                // Convertir lista de actores en String
                String nombresActores = "";
                if (p.getActores() != null) {
                    for (Actor a : p.getActores()) {
                        if (!nombresActores.isEmpty()) {
                            nombresActores += ", ";
                        }
                        nombresActores += a.getNombre();
                    }
                }

                String nombreDirector = "Sin director";
                if (p.getDirector() != null) {
                    nombreDirector = p.getDirector().getNombre();
                }

                Object[] fila = {p.getIdPeli(), p.getTitulo(), p.getGenero(), nombreDirector, nombresActores};
                modeloTabla.addRow(fila);
            }

            jTable1.setModel(modeloTabla);
            jTable1.setAutoCreateRowSorter(true);
        } catch (MyException ex) {
            JOptionPane.showMessageDialog(this, "Error cargando las pel√≠culas");
        }
    }

    public void setActoresSeleccionados(List<Actor> actores) {
        this.actoresSelccionados = actores;
        if (actores.isEmpty()) {
            listaActortes.setText("Seleccionados: Ninguno");
            return;
        }

        String texto = actores.stream()
                .map(Actor::getNombre)
                .collect(Collectors.joining(", "));

        listaActortes.setText("Seleccionados: " + texto);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnSelecionarActor;
    private javax.swing.JComboBox<Object> comboDirector;
    private javax.swing.JComboBox<String> comboGenero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel listaActortes;
    private javax.swing.JTextField txtIdPelicula;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
